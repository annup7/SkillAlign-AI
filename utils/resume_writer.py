from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
import os

def generate_resume(full_name, skills, job_title, matched_skills, missing_skills, projects, certifications, summary):
    """
    Generate a tailored resume PDF with skills, projects, certifications, and summary.
    """

    filename = f"Tailored_Resume_{full_name.replace(' ', '_')}.pdf"
    filepath = os.path.join("generated_resumes", filename)

    # Ensure output directory exists
    os.makedirs("generated_resumes", exist_ok=True)

    c = canvas.Canvas(filepath, pagesize=letter)
    width, height = letter

    # -----------------------
    # Header
    # -----------------------
    c.setFont("Helvetica-Bold", 20)
    c.drawString(50, height - 50, full_name)

    c.setFont("Helvetica", 12)
    c.drawString(50, height - 70, f"Target Role: {job_title}")

    # -----------------------
    # Professional Summary
    # -----------------------
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, height - 110, "Professional Summary")

    text_obj = c.beginText(50, height - 130)
    text_obj.setFont("Helvetica", 11)
    for line in summary.split("\n"):
        text_obj.textLine(line)
    c.drawText(text_obj)

    # -----------------------
    # Skills
    # -----------------------
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, height - 200, "Skills")

    text_obj = c.beginText(50, height - 220)
    text_obj.setFont("Helvetica", 11)
    text_obj.textLine(f"Matched Skills: {', '.join(matched_skills) if matched_skills else 'None'}")
    text_obj.textLine(f"Missing Skills: {', '.join(missing_skills) if missing_skills else 'None'}")
    text_obj.textLine(f"All Skills: {skills}")
    c.drawText(text_obj)

    # -----------------------
    # Projects
    # -----------------------
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, height - 300, "Projects")

    text_obj = c.beginText(50, height - 320)
    text_obj.setFont("Helvetica", 11)
    for project in projects.split(","):
        text_obj.textLine(f"- {project.strip()}")
    c.drawText(text_obj)

    # -----------------------
    # Certifications
    # -----------------------
    c.setFont("Helvetica-Bold", 14)
    c.drawString(50, height - 400, "Certifications")

    text_obj = c.beginText(50, height - 420)
    text_obj.setFont("Helvetica", 11)
    for cert in certifications.split(","):
        text_obj.textLine(f"- {cert.strip()}")
    c.drawText(text_obj)

    # -----------------------
    # Footer
    # -----------------------
    c.setFont("Helvetica-Oblique", 10)
    c.drawString(50, 30, "Generated by SkillAlignAI")

    c.save()
    return filepath
